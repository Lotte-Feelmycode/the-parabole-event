buildscript {
    ext {
        restdocsApiSpecVersion = '0.16.2'
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version "3.3.2"
}
group = 'com.feelmycode.parabole'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.3"
    }
}

configurations {
    asciidoctorExtensions
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'junit:junit:4.13.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

    annotationProcessor 'org.projectlombok:lombok'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
    set('springCloudVersion', "2021.0.4")
    snippetsDir = file("./src/main/resources/snippets")
}

test {

    outputs.dir snippetsDir
//    useJUnitPlatform()
//    useJUnitPlatform{
//        includeEngines 'junit-vintage'
//    }
}

asciidoctor {
    dependsOn test
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
}

build {
    dependsOn asciidoctor
    copy {
        from "./build/docs/asciidoc"
        include '*.html'
        into "./src/main/resources/static/docs/"
    }
}

bootJar {
    dependsOn asciidoctor
    copy {
        from "./build/docs/asciidoc"
        include '*.html'
        into "./src/main/resources/static/docs/"
    }
}

processResources.dependsOn('ymlSecurity')

task ymlSecurity(type: Copy) {
    from './src/main/resources/event-submodule-security'
    include '*.yml'
    into './src/main/resources'
}
clean {
    delete "./src/main/resources/static/", "docs"
}
